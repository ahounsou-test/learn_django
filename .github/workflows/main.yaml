name: build
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
     
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: haxelegide/learndjango
          flavor: |
            latest=auto
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long

      # - name: Build an image from Dockerfile
      #   run: |
      #     docker build -t docker.io/haxelegide/learndjango:${{ github.sha }} .
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: '${{ steps.meta.outputs.tags }}'
          labels: ${{ steps.meta.outputs.labels }}
  Scan:
    name: scan
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/haxelegide/learndjango:sha-${{ github.sha }}'
          format:  'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          github-pat: ${{ secrets.GITHUB_TOKEN }}
  Deploy:
    name: deploy
    runs-on: ubuntu-20.04
    needs: scan 
    steps:
      - name: Render Deploy
        run: |
          curl -X POST https://api.render.com/v1/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
            -d '{
              "branch": "main", # Change this to your main branch name,
               "environment": "development"
              "dockerImages": [
                {
                  "imageName": "docker.io/haxelegide/learndjango:sha-${{ github.sha }}",
                  "env": {
                    "YOUR_ENV_VARIABLE": "value" # Add any environment variables you need
                  }
                }
              ]
            }'
        env:
          RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
          working-directory: ./path/to/your/app
